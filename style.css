* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  -webkit-touch-callout: none; /* 禁止iOS长按弹出菜单 */
  touch-action: manipulation; /* 优化触摸操作 */
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
    Arial, sans-serif;
  background-color: #000;
  min-height: 100vh;
  height: 100vh; /* 确保全屏 */
  max-height: -webkit-fill-available; /* 修复iOS Safari高度问题 */
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  overflow: hidden; /* 防止滚动 */
  position: fixed; /* 防止iOS键盘弹出导致布局变化 */
  width: 100%;
}

.game-container {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.screen {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: env(safe-area-inset-top) env(safe-area-inset-right)
    env(safe-area-inset-bottom) env(safe-area-inset-left); /* 适配刘海屏 */
  z-index: 1;
  background-color: #000; /* 添加背景色防止透明 */
}

.hidden {
  display: none !important; /* 使用!important确保隐藏 */
  visibility: hidden;
  opacity: 0;
  z-index: -1;
}

/* 开始界面 */
.joker-img {
  width: 205px;
  height: 340px;
  max-height: 40vh;
  position: relative;
  object-fit: cover;
  margin-bottom: 20px;
}

#start-screen {
  background: #1a1a1a; /* 更改为深色背景 */
  /* background-image: url('./assets/background.png'); 如果有背景图可以添加 */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-image: url("./assets/background1.png");
}
#start-screen .top {
  width: 100%;
  height: 340px;
  position: relative;
}

.music-control {
  position: absolute;
  right: 15px;
  width: 50px;
  height: 50px;
  top: 15px;
  border-radius: 50%;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(4px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.5);
  transition: all 0.3s ease;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
}

.music-control img {
  width: 60%;
  height: 60%;
  object-fit: contain;
  display: block;
  transition: all 0.3s ease;
}

/* Hover effect */
.music-control:hover {
  background-color: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
}

/* Active state - when button is pressed */
.music-control:active {
  transform: scale(0.95);
  background-color: rgba(255, 255, 255, 0.4);
}

/* Animation for when music is playing */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
  }
}

/* Add this class with JavaScript when music is playing */
.music-control.playing {
  animation: pulse 2s infinite;
}

.music-control.playing img {
  animation: rotate 5s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/*  1*/
.title {
  /*  抓住逃跑*/
  color: #393e4d;
  font-size: 32px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  margin-bottom: 30px;
  font-family: kaiti, "Poppins ", sans-serif;
}

.start-btn {
  background-color: transparent;
  border: none;
  font-size: 0; /* 隐藏文字 */
  position: absolute;
  bottom: 5%;
  left: 50%;
  transform: translateX(-50%);
  width: 1200px;
  height: 282px;
  z-index: 10;
  cursor: pointer;
  opacity: 0.01; /* 几乎完全透明但仍可点击 */
}

/* 可选：添加调试边框，测试时可以取消注释 */
/* .start-btn {
  border: 2px solid red;
  opacity: 0.5;
} */

.batman-img {
  width: 100%;
  height: auto;
  max-height: 30vh;
  object-fit: contain;
}

/* 规则界面 */
#rules-screen {
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 20px;
  z-index: 100; /* 确保规则屏幕在最上层 */
}

.rules-title {
  color: #ff0000;
  font-size: 28px;
  text-align: center;
  margin-bottom: 30px;
}

.rules-content {
  background: #666;
  padding: 30px 20px;
  border-radius: 15px;
  margin: 0 20px;
  line-height: 1.8;
  font-size: 18px;
  text-align: left;
  white-space: pre-line;
  max-width: 90%;
  width: 100%;
}

.rules-footer {
  color: #fff;
  margin-top: 40px;
  padding: 15px 40px;
  font-size: 20px;
  background: #800000;
  border-radius: 25px;
  cursor: pointer;
  text-align: center;
  /* 增加以下样式以提高按钮可见性和可点击性 */
  display: inline-block;
  min-width: 150px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
  transition: all 0.2s ease;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  position: relative;
  z-index: 100;
  /* 添加更多样式确保按钮可点击 */
  touch-action: manipulation;
  -webkit-appearance: none;
  appearance: none;
}

.rules-footer:hover,
.rules-footer:active {
  background: #a00000;
  transform: scale(1.05);
}

/* 游戏界面 */
.header {
  width: 100%;
  text-align: center;
  padding: 10px;
  position: relative;
}

.timer-container {
  display: inline-block;
  text-align: center;
  padding: env(safe-area-inset-top) 0 0 0; /* 适配刘海屏 */
}

.timer-label {
  font-size: min(32px, 7vw);
  margin-bottom: 5px;
}

.timer {
  font-size: min(64px, 12vw);
  font-weight: bold;
  color: #ff0000;
}

.game-area {
  position: relative;
  flex: 1;
  width: 100%;
  height: calc(100% - 120px);
  overflow: hidden;
  touch-action: none; /* 防止游戏区域内的滚动和缩放 */
}

.circle-timer {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: min(100px, 25vw);
  height: min(100px, 25vw);
  border: 3px solid #fff;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: min(48px, 12vw);
  background: rgba(0, 0, 0, 0.7);
  z-index: 20;
}

.joker-target {
  position: absolute;
  width: min(80px, 20vw); /* 响应式大小 */
  height: min(80px, 20vw);
  border-radius: 50%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  will-change: transform, left, top, filter;
  touch-action: none;
  -webkit-user-drag: none;
  user-drag: none;
  /* 添加触摸反馈 */
  -webkit-tap-highlight-color: transparent;
  transition: transform 0.1s ease-out, filter 0.1s ease-out;
}

.joker-target::after {
  content: '';
  position: absolute;
  width: 150%;
  height: 150%;
  left: -25%;
  top: -25%;
  z-index: -1;
}

.hit-count {
  position: fixed;
  bottom: max(40px, 5vh);
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 15px;
  font-size: min(24px, 5vw); /* 响应式字体 */
  background: rgba(0, 0, 0, 0.7);
  padding: 10px 20px;
  border-radius: 25px;
  z-index: 5;
}

.bat-icon {
  width: 40px;
  height: 40px;
}

/* 结果界面 */
.result-img {
  width: 100%;
  height: auto;
  max-height: 50vh;
  object-fit: cover;
  margin-bottom: 20px;
}

.result-message {
  font-size: 24px;
  margin-bottom: 20px;
  text-align: center;
}

.bat-count {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 24px;
}

/* 特效容器 */
.effect {
  position: absolute;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

/* 简化爆炸特效 */
.explosion {
  width: 10px;
  height: 10px;
  background-color: #ffcc00;
  border-radius: 50%;
  box-shadow: 0 0 20px 10px rgba(255, 204, 0, 0.7),
              0 0 40px 20px rgba(255, 100, 0, 0.5);
  animation: explosion-burst 0.5s ease-out forwards;
  z-index: 100;
}

/* 简化闪光特效 */
.sparkle {
  width: 50px;
  height: 50px;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.9) 0%,
    rgba(255, 255, 255, 0) 70%
  );
  animation: sparkle-shine 0.5s ease-out forwards;
  z-index: 100;
  box-shadow: 0 0 15px 5px rgba(255, 255, 255, 0.8);
}

@keyframes explosion-burst {
  0% {
    transform: translate(-50%, -50%) scale(0.1);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scale(5);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(10);
    opacity: 0;
  }
}

@keyframes sparkle-shine {
  0% {
    transform: translate(-50%, -50%) scale(0.2);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(2);
    opacity: 0;
  }
}

/* 移动设备专用特效 */
.mobile-flash {
  position: absolute;
  width: 150px;
  height: 150px;
  transform: translate(-50%, -50%);
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 1) 0%,
    rgba(255, 255, 255, 0) 70%
  );
  border-radius: 50%;
  z-index: 100;
  animation: mobile-flash 0.4s ease-out forwards;
  pointer-events: none;
  will-change: transform, opacity;
}

@keyframes mobile-flash {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.2);
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.5);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(2.5);
  }
}

.mobile-ripple {
  position: absolute;
  width: 80px;
  height: 80px;
  transform: translate(-50%, -50%);
  border: 6px solid rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  z-index: 99;
  animation: mobile-ripple 0.5s ease-out forwards;
  pointer-events: none;
  will-change: width, height, opacity, border-width;
}

@keyframes mobile-ripple {
  0% {
    width: 0;
    height: 0;
    border-width: 10px;
    opacity: 1;
  }
  100% {
    width: 200px;
    height: 200px;
    border-width: 1px;
    opacity: 0;
  }
}

/* 陷阱通知样式 */
.trap-notification {
  position: absolute;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(255, 0, 0, 0.8);
  color: #fff;
  padding: 15px 30px;
  border-radius: 20px;
  font-size: 24px;
  font-weight: bold;
  z-index: 1000;
  text-align: center;
  pointer-events: none;
  box-shadow: 0 0 20px rgba(255, 0, 0, 0.6);
  border: 2px solid #fff;
  display: none;
}

.show-notification {
  animation: trapPopIn 0.3s forwards, trapPopOut 0.3s 1.7s forwards;
}

@keyframes trapPopIn {
  0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes trapPopOut {
  0% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1.2); opacity: 0; }
}

/* 分身小丑旋转动画 */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* 分身小丑颜色闪烁动画 */
@keyframes colorPulse {
  0% { filter: hue-rotate(180deg) brightness(1.2); }
  50% { filter: hue-rotate(270deg) brightness(1.5); }
  100% { filter: hue-rotate(180deg) brightness(1.2); }
}
